# -*- mode: org; fill-column: 79; -*-

#+TITLE: All About TCP/IP
#+AUTHOR: WLHarvey4
#+DATE: <2018-12-17 Mon 22:01>
#+SUBTITLE: And Networking
#+SUBTITLE: Version {{{VERSION}}} {{{time(%F %R)}}}
#+MACRO: VERSION 0.4.1

* Part I    --- TCP/IP Basics

This section discusses the basics of TCP/IP and how it works.
** What TCP/IP Is
{{{heading(Objectives)}}}
    + Networks and network protocols
    + History of TCP/IP
    + Important features of TCP/IP

:CI:
#+CINDEX: Transmission Control Protocol/Internet Protocol
#+CINDEX: TCP/IP
#+CINDEX: history of TCP/IP
#+CINDEX: protocol
#+CINDEX: protocol suite
#+CINDEX: network
#+CINDEX: RFC
:END:
{{{heading(Summary)}}}

- Transmission Control Protocol/Internet    Protocol (TCP/IP)  ::
     a _protocol system_; a collection of protocols that supports network
     communications.  The answer to the question _What is a protocol?_ begins
     with the question _What is a network?_


     This section describes what a *network* is and shows why networks /need/
     *protocols*.  This section explains what *TCP/IP* is, what it does, and
     where it began.

      {{{subheading(After studying this section, you should be able to:)}}}
      - Define the term _network_
      - Explain what a network _protocol suite_ is
      - Discuss the history of TCP/IP
      - List some important features of TCP/IP
      - Identify the organizations that oversee TCP/IP and the Internet
      - Explain what *RFCs* are and where to find them

:CI:
#+CINDEX: network, definition
#+CINDEX: network protocol
#+CINDEX: protocol, network
#+CINDEX: transmission medium
#+CINDEX: network communication process
#+CINDEX: unit of data
#+CINDEX: implementation of TCP/IP transmissions
:END:
*** Networks and Protocols
- Network :: a collection of computers or computer-like devices that can communicate across a
             common transmission medium.
- Transmission Medium  :: Often  the transmission medium  is an insulated  metal wire  that carries
     electrical pulses between computers; but it could also be a phone line or even wireless.

The communication process requires that data from  one computer pass across the transmission medium
to another computer.  A  computer interacts with the world through one  or more *applications* that
perform specific  tasks and manage the  communication process.  In  every case if your  computer is
part  of  a  network, an  application  on  the  computer  must  be capable  of  communicating  with
applications on other network computers.

- Network Protocol  :: a system of  common rules that helps  define the complex process  of network
     communication.   Protocols guide  the  process of  sending  data from  an  application on  one
     computer, through the networking components of  the operating system, to the network hardware,
     across the transmission medium, and up through the destination computer's network hardware and
     operating system to a receiving application.

The protocols of TCP/IP define the /network communication  process/ and define how a /unit of data/
should look and what  information it should contain so that a receiving  computer can interpret the
message correctly.   TCP/IP and  its related  protocols from  a complete  system defining  how data
should be processed, transmitted, and received on a TCP/IP network.  A system of related protocols,
such as the TCP/IP protocols, is called a *protocol suite*.

- TCP/IP Implementation :: The actual act  of /formatting/ and /processing/ TCP/IP transmissions is
     performed  by a  software  component know  as  the vendor's  *implementation*  of TCP/IP.   An
     implementation is a software  component that performs the functions that  enable a computer to
     participate in a TCP/IP network.
- TCP/IP Standard :: a system of rules defining communication on TCP/IP networks.  The purpose of
     the TCP/IP standars is to ensure the compatibility of all TCP/IP implementations regards of
     version or vendor.


:CI:
#+CINDEX: TCP/IP history
#+CINDEX: ARPAnet
:END:
*** Development of TCP/IP
TCP/IP's design is  a result of its historical role  as the protocol system for what  was to become
the Internet.  The Internet grew from research originally performed by the United States Department
of Defense.   Defense officials wondered  whether it would be  possible for disparate  computers to
share    information.    These    officials   created    a    network   that    became   know    as
@@texinfo:@dfn{ARPAnet}@@,  named   for  the  @@texinfo:@cite{Advanced  Research   Projects  Agency
(ARPA)}@@.

As this network began to take sharep, a group of computer scientists started to work on a versatile
protocol system that would support a wide range of hardware and provide a resilient, redundant, and
decentralized system for delivering data on a massive, global scale.  The result of this research
was the beginning of the TCP/IP protocol suite.  When the National Science Foundation wanted to
build a network to connect research institutions, it adopted ARPAnet's protocol system and began to
build what we know as the Internet.    University College of London and other European resarch
institutes contributed to the early development of TCP/IP, and the first trans-Atlantic
communication tests began around 1975.  As more and more universities and research institutions
became gradually connected, the Internet phenomenon began to spread around the world.

The original decentralized vision of ARPAnet survives to this day in the design of the TCP/IP
protocol system and is a big part of the success of TCP/IP and the Internet.  Two important
features of TCP/IP that provide for this decentralized environment are as follows:

:CI:
#+CINDEX: end-node verification
#+CINDEX: dynamic routing
#+CINDEX: end nodes
:END:
+ End-node verification :: The two computers that are actually communicating --- called the /end
     nodes/ because they are at each end of the chain passing the message --- are responsible for
     acknowledging and verifying the transmission.  All computers basically operate as equals, and
     there is no central scheme for overseeing communications.
+ Dynamic routing :: Nodes are connected through multiple paths, and the routers choose a path for
     the data based on present conditions.

:CI:
#+CINDEX: local area network
#+CINDEX: LAN
#+CINDEX: gateway
:END:
**** Personal Computer Revolution
As the Internet  began to reach beyond  its original academic roots, users  with personal computers
started to look for ways to connect.  One  solution was a dial-up connection through a modem, which
offered network connnectivity through a phone line.

But users also wanted to connect to other nearby computers in their own office---to share files and
access peripheral devices.  To address this need, another network concept, the @@texinfo:@dfn{local
area network (LAN)}@@, began to take form.

Early LAN protocols did not provide Internet access and were designed around proprietary protocoal
systems.  Many did not support routing of any kind.  Computers in a single workgroup would talk to
each other using one of these proprietary protocols, and users would either do without the
Internet, or they would connect separately using a dial-up line.

As the Internet service  providers grew more numerous, and Internet  access became more affordable,
companies  began to  ask  for a  fast,  permanent,  always-on Internet  connection.   A variety  of
solutions  began  to  emerge  for  getting  LAN  users  connected  to  the  TCP/IP-based  Internet.
Specialized *gateways* offered the protocol translation necessary for these local networks to reach
the Internet.  Gradually, however, the growth of the  World Wide Web, and the accompanying need for
end-user Internet connectivity,  made TCP/IP essential, leaving little purpose  for proprietary LAN
protocols such as AppleTalk, NetBEUI, and Novell's IPX/SPX.

Operating system vendors  such as Apple and  Microsoft started to make TCP/IP  the default protocol
for  local, as  well as  Internet, networking.   TCP/IP  grew up  around UNIX,  and all  UNIX/Linux
variants were already fluent in TCP/IP.  Eventually,  TCP/IP became the networking protocol for the
whole world---from small offices to gigantic data centers.  The need to accommodate LANs has caused
considerable innovation  in the implementation  of the hardware-conscience protocols  that underlie
TCP/IP.


:CI:
#+CINDEX: TCP/IP features
#+CINDEX: features of TCP/IP
:END:
*** TCP/IP Features
Pay close attention to the way the TCP/IP protocol suite addresses the following problems:
+ Logical addressing
+ Routing
+ Name Resolution
+ Error control and flow control
+ Application support

These issues  are at the  heart of  the TCP/IP.  The  following sections introduce  these important
features.
:CI:
#+CINDEX: logical address
#+CINDEX: IP address
#+CINDEX: phyiscal address
#+CINDEX: network adaptor
#+CINDEX: media access control
#+CINDEX: MAC address
#+CINDEX: physical network
#+CINDEX: LAN
#+CINDEX: WAN
#+CINDEX: routers
#+CINDEX: segment network
#+CINDEX: routed network
#+CINDEX: subnet
#+CINDEX: Internet Corporation for Assigned Names and Numbers
#+CINDEX: ICANN
#+CINDEX: Network ID
#+CINDEX: Network Access Translation
#+CINDEX: NAT
#+CINDEX: private IP range
#+CINDEX: Address Resolution Protocol
#+CINDEX: Reverse Address Resolution Protocol
#+CINDEX: ARP
#+CINDEX: RARP
:END:
**** Logical Addressing
***** Network Adaptor Physical Address
****** Media Access Control (MAC) Address
A *network  adaptor* has a  unique /physical  address/.  In the  case of /ethernet/,  the *physical
address* (sometimes  called a  *Media Access  Control (MAC)* address)  used to  be assigned  to the
adaptor at  the factory, although many  contemporary devices now  provide a means for  changing the
phyisical address.
****** LANs
On a  LAN, low-lying hardware-conscience protocols  deliver data across the  physical network using
the adaptor's  physical address.   There are many  network types,  and each as  a different  way of
delivering data.  On a basic ethernet network, for example, a computer sends messages directly onto
the transmission medium.  The network adaptor of each computer listens to every transmission on the
local network to determine whether a message is addressed to its own physical address.
****** WANs
On large networks every network adaptor cannot listen to every message.  As the transmission medium
becomes more  populated with computers, a  physical addressing scheme cannot  function efficiently.
Network administrators  often segment networks  using devices such  as /routers/ to  reduce network
traffic.
****** Routed Network with Subnets
On a /routed network/, administrators need a  way to subdivide the network into smaller subnetworks
(called *subnets*), and  impose a hierarchical design  so that a message can  travel efficiently to
its destination.

***** Logical Addressing Through Subnetting
TCP/IP provides this subnetting capability  through *logical addressing*.  A @@texinfo:@dfn{logical
address}@@ is an address configured through the  network software.  In TCP/IP, a computer's logical
address is called an @@texinfo:@dfn{IP address}@@.  An IP address can include:
	+ a /network ID number/ identifying a network
        + a /subnet ID number/ identifying a subnet on the network
        + a /host ID number/ identifying the computer on the subnet

The IP addressing system also lets the  network administrator impose a sensible numbering scheme on
the network so that the progression of addresses reflects the internal organization of the network.
***** Internet-Ready Addresses
****** Isolated from Internet---Any IP Address
If your network is isolated from the Internet, you are free to use any IP addresses you want (as
long as your network follows the basic rules for IP addressing).
****** Connected to Internet---Network ID Assignment
If your network will be part of the  Internet, *Internet Corporation for Assigned Names and Numbers
(ICANN)*, which was formed in 1998, will assign a /network ID/ to your network, and that network ID
will form the first part of the IP address.
****** Network Address Translation (NAT)
One interesting development is a system called *Network Address Translation (NAT)*, which lets the
local network use a private IP range that is nonroutable on the Internet.  The NAT device will
translate a local address into an official Internet-ready address for Internet communications.
***** Address Resolution Protocol (ARP)
In TCP/IP, a logical address is resolved to and from the corresponding hardware-specific physical
address using *Address Resolution protocol (ARP)* and *Reverse ARP (RARP)*.
**** Routing
:CI:
#+CINDEX: router
#+CINDEX: local subnet
#+CINDEX: filters
#+CINDEX: bridges
#+CINDEX: switches
#+CINDEX: hubs
:END:
 - Router ::  is a  special device  that can read  logical addressing  information and  direct data
             across the  network to  its destination.  At  the simplest level,  a router  divides a
             local subnet from the larger network.

Data addressed to another  computer or device on the /local subnet/ does  not cross the router and,
therefore, does not clutter up the transmission lines of the greater network.  If data is addressed
to a computer outside the subnet, the router forwards the data accordingly.

Large networks,  such as the  Internet, include  many routers and  provide multiple paths  from the
source to the destination.

TCP/IP includes protocols that define how the routers find a path through the network.

@@texinfo:@cartouche
Network  devices such  as  @b{bridges},  @b{switches}, and  @b{intelligent  hubs}  can also  filter
traffice and  reduce network traffic.   Because these  devices work with  @emph{physical addresses}
rather  than @emph{logical  addresses}, they  cannot  perform the  complex routing  functions of  a
router.
@end cartouche@@

**** Name Resolution
:CI:
#+CINDEX: domain name system (dns)
#+CINDEX: DNS
#+CINDEX: name resolution
#+CINDEX: name servers
#+CINDEX: name service system
#+CINDEX: Windows Internet Name Services (WINS)
:END:
 - Domain Name    System (DNS)  ::  A numberic IP  address is designed  for the convenience  of the
      computer rather than the  convenience of the user.  TCP/IP therefore  provides for a parallel
      structure of user-oriented alphanumeric names, called *domain names* or @@texinfo:@dfn{Domain
      Name System (DNS)}@@.

 - Name Resolution :: This  mapping of domain names to an IP  address is called @@texinfo:@dfn{name
      resolution}@@.

 - Name Servers :: Special computers called @@texinfo:@dfn{name servers}@@ store tables showing how
                   to translate these domain names to and from IP addresses.

The computer addresses comonly associated with email or the World Wide Web are expressed as DNS
names.  TCP/IP's @@texinfo:@dfn{name service}@@ system provides for a hierarchy of name servers
that supply domain name/IP address mappings for DNS-registered computers on the Internet.  This
means that the everyday user rarely has to enter or decipher an actual IP address.

DNS is the name resolution system for the Internet and is the most common name resolution method.
Other techniques also exist for resolving alphanumeric names to IP address.  These alternative
systems have gradually faded in importance in recent years, but name resolution services such as
the *Windows Internet Name Services (WINS)*, which resolves NetBIOS names to IP address, are still
in operation around the world.

**** Error Control and Flow Control
:CI:
#+CINDEX: transport layer
#+CINDEX: network access layer
:END:
The TCP/IP protocol suite provides features that ensure the reliable delivery of data across the
network.  These features include
 - checking data for transmission errors (to ensure that the data that arrives is exactly what was
   sent)
 - acknowledging successful receipt of a network message

TCP/IP's Transport Layer defines many of these error-control, flow-control, and acknowledgment
functions through the TCP protocol.  Lower leverl protocols at TCP/IP's Network Access layer also
play a part in the overall system of error control.

**** Application Support
:CI:
#+CINDEX: ports
#+CINDEX: ftp
#+CINDEX: file transfer
#+CINDEX: Lpr
#+CINDEX: printing
#+CINDEX: ping
#+CINDEX: NSLookup
#+CINDEX: Traceroute
:END:
Several network applications might be running on the same computer.  The protocol software must
provide a means for determining which incoming packet belongs with each application.  In TCP/IP,
this interface from the network to the application is accomplished through a system of logical
channels called @@texinfo:@dfn{ports}@@.  Each port has a number that is used to identify the
port.  You can think of these ports as logical pipelines within the computer through which data can
flow from the application to  (and from) the protocol software.

The TCP/IP suite also includes a number of ready-made applications designed to assist with the
various network task.  Some typical TCP/IP utilities are show.

#+CAPTION[TCP/IP Applications]: TCP/IP Utility Applications
#+NAME: Tab:Apps
 |------------+-------------------------------|
 | Utility    | Purpose                       |
 |------------+-------------------------------|
 | ftp        | File transfer                 |
 | Lpr        | Printing                      |
 | Ping       | Configuration/troubleshooting |
 | NSLookup   | Configuration/name resolution |
 | Traceroute | Configuration/troubleshooting |
 |------------+-------------------------------|

*** Standards Organizations and RFCs
:CI:
#+CINDEX: Internet Architecture Board
#+CINDEX: IAB
#+CINDEX: Internet Engineering Task Force
#+CINDEX: IETF
#+CINDEX: Internet Research Task Force
#+CINDEX: IRTF
#+CINDEX: Internet Corporation for Assigned Names and Numbers
#+CINDEX: ICANN
#+CINDEX: Internet Assigned Numbers Authority
#+CINDEX: IANA
#+CINDEX: The U.S. National Telecommunications and Information Administration
#+CINDEX: NTIA
:END:
Several organizations have been instrumental in the development of TCP/IP and the Internet.
 + Internet Architecture Board (IAB) :: The governing board that sets policy for the Internet and
      sees to the further development of TCP/IP standards.
 + Internet Engineering Task Force (IETF) :: An organization that studies and rules on engineering
      issues.  The IETF is divided into workgroups that study particular aspects of TCP/IP and the
      Internet, such as applications, routing, network management, and so forth.
 + Internet Research Task Force (IRTF) :: The branch of the IAB that sponser long-range research.
 + Internet Corporation for Assigned Names and Numbers (ICANN) :: An organization established in
      1998 that coordinates the assignment of Internet domain names, IP address, and globally
      unique protocol parameters such as port numbers ([[https://www.icann.org]]).

Until recently, Washington has maintained an advisory role in maintaining the Internet Assigned
Numbers Authority (IANA).  The U.S. National Telecommunications and Information Administration
(NTIA) has contracted with ICANN to manage IP addresses, protocols parameters, and the DNS root
zone since 1999, but the NTIA has retained an oversight role.  The NTIA is currently negotiating
with ICANN to establish a transition plan  that will pass full control of the IANA to ICANN, which
will mean that the Internet is at last truly interntional and unaffiliated.

:CI:
#+CINDEX: request for comments
#+CINDEX: RFC
:END:
Because TCP/IP is a system of open standards that are not owned by any company or individual, the
Internet community needs a comprehensive, independent, vendor-neutral process for proposing,
discussing, and releasing additions and changes.  Most of the official documentation on TCP/IP is
available through a series of @@texinfo:@dfn{Requests for Comments (RFCs)}@@.  The library of RFCs
includes Internet standards and reports from workgroups.  IETF official specifications are
published as RFCs.  Many RFCs are intended to illuminate some aspect of TCP/IP or the Internet.
You will find many references to RFCs throughout this book because most protocols of the TCP/IP
suite are defined in one or more RFCs.  Anyone can submit an RFC for review.

The RFCs provide essential technical background for anyone wanting a deeper understanding of
TCP/IP.  The list includes several technical papers on protocols, utilities, and services, as well
as a few TCP/IP-related poems and Shakespeare takeoffs.

You can find RFCs at several places on the Internet.  Try [[https://rfc-editor.org]].  The following
table shows a few representative RFCs.

| Number | Title                                           |
|--------+-------------------------------------------------|
|    791 | Internet Protocol (IP)                          |
|    792 | Internet Control Message Protocol (ICMP)        |
|    793 | Transmission Cotnrol Protocol                   |
|    959 | File Transfer Protocol                          |
|    968 | Twas the Night Before Start-up                  |
|   1180 | TCP/IP Tutorial                                 |
|   1188 | Proposed Standard for Transmission of Datagrams |
|   2097 | The PPP NetBIOS Frames Control Protocol         |
|   4831 | Goas for Network-Baed Localized Mobility Mgmt   |
|--------+-------------------------------------------------|

*** Summary
This section described what networks are and why networks need protocols.  TCP/IP began with the
U.S. Defense Department's experimental ARPAnet.  TCP/IP was designed to provide decentralized
networking in a diverse environment.  This section also covered some important features of TCP/IP,
such as /logical addressing/, /name resolution/, and /application support/.  It described some of
TCP/IP's oversight organizations, and discussed RFCs.

*** Q&A
    - Q :: What is the difference between a *protocol standard* and a *protocol implementation*?
    - A ::

    - Q :: Why was *end-node verification* an important feature of ARPAnet?
    - A ::

    - Q :: Why do larger networks employ *name resolution*?
    - A ::

*** Workshop

**** Quiz
     1. What is a network?
     2. What are two features of TCP/IP that allow it to operate in a decentralized manner?
     3. What system is responsible for mapping domain names to IP addresses?
     4. What are RFCs?
     5. What is a port?

**** Exercises
     1. Visit [[https://www.rfc-editor.org]] and browse some of the RFCs.
     2. Visit the IETF and explore the various active working groups
        at [[https://datatracker.ietf.org/wg/]].
     3. Visit the IRTF at [[https://www.irtf.org]] and explore some of the ongoing research.
     4. Visit the ICANN About page at [[https://www.icann.org/]] and learn about the ICANN
        mission.
     5. Read RFC 1160 for an early history (up to 1990) of the IAB and IETF.

**** Key Terms
     + ARPAnet :: An experimental network that was the birthplace of TCP/IP.
     + Domain name :: An alphanumeric name associated with an IP address through TCP/IP's DNS name
       service system.
     + Gateway :: a router that connects a LAN to a larger network.  Used to apply to a router that
       performed some kind of protocol conversion.
     + IP address :: A local address used to locate a computer or other networked device (such as a
       printer) on a TCP/IP netowrk.
     + Local Area Network (LAN) :: A small network belongint to a single office, organization, or
       home, usually occupying a single geographical location.
     + Logical address :: A network address configured through the protocol software.
     + Name service :: A service that associates human-friendly alphanumeric names with network
       addresses.  A computer that procides this service is known as a *name server*, and the act
       of resolving a name to an address is called *name resolution*.
     + Network Protocol :: A set of common rules defining a specific aspect of the communication
       process.
     + Physical address :: An address associate with the network hardware.  In the case of an
       ethernet adapter, the physical address is typically assigned at the factory.
     + Port :: An internal channel or address that provides an interface between an application and
       TCP/IPs Transport Layer.
     + Proprietary :: A technology controlled by a private entity, such as a corporation.
     + Protocol implementation :: A software component that implements the communication rules
       defined in a protocol standard.
     + Protocol system or protocol suite :: A system of interconnected standards and procedures
       (protocols) that enables computers to communicate over a network.
     + RFC (Request for Comment) :: An official technical paper providing relevant information on
       TCP/IP or the Internet.  You can find the RFCs at several places on the Internet; try
       [[https://www.rfc-editor.org]].
     + Router :: A network device that forwards data by logical address and can also be used to
       segment large networks into smaller subnetworks.
     + Transmission Control Protocol/Internet Protocol (TCP/IP) :: A network protocol suite used on
       the Internet and also on many other networks around the world.

** How TCP/IP Works

{{{heading(Objectives)}}}
    + TCP/IP protocol system
    + The OSI Model
    + Data packages
    + How TCP/IP protocols interact

{{{heading(Summary)}}}
      TCP/IP is a system (suite) of protocols; a protocol is a system of rules and procedures.  The
      hardware and software of the communicating computers carry out the rules of TCP/IP
      communications --- the user does not have to get involved with the details.  A working
      knowledge of TCP/IP is essential if you want to navigate through the configuration and
      troubleshoot problems with TCP/IP networks.

      {{{subheading(At the completion:)}}}

      - Describe the layers of the TCP/IP protocol system, and the purpose of each layer

      - Describe the layers of the OSI model and explain how the OSI layers relate to TCP/IP

      - Explain TCP/IP protocol headers and how data is enclosed with header information at each
        layer of the protocol stack

      - Name the data package at each layer of the TCP/IP stack

      - Discuss the TCP, UDP, and IP protocols and how they work together to provide TCP/IP
        functionality

*** The TCP/IP Protocol System
:CI:
#+CINDEX: responsibilities, protocol system
:END:

{{{heading(The responsibilities of a protocol system)}}}
A protocol system (such as TCP/IP) must be responsible for the following tasks:
  + Prepare data for the /transmission medium/ ::

	Dividing messages into manageable chunks of data that will pass
       efficiently through the transmission medium;

  + Communicate with /network adaptor/ ::

  	Interfacing with the network adaptor hardware;

  + Addressing ::

  	the sending computer must be capable of targeting data to a receiving
                  computer; the receiving computer must be capable of
                  recognizing a message that it is supposed to receive;

  + Route data to /subnet/ ::

  	Routing data to the subnet of the destination computer, even if the
       source subnet and destination subnet are dissimilar physical networks;

  + Error • Flow • Acknowledge ::

  	Performing error control, flow control, and acknowledgment; for
       reliable communication, the sending and receiving computers must be able
       to identify and correct faulty transmissions and control the flow of
       data;

  + Pass data to /network/ ::

  	Accepting data from an application and passing it to the network;

  + Receive data from /network/ ::

  	Receiving data from the network and passing it to an application;

**** Modular Design
:CI:
#+CINDEX: modular design, tcp/ip protocol
#+CINDEX: protocol layers, TCP/IP
#+CINDEX: layered components
#+CINDEX: TCP/IP model
#+CINDEX: stack
#+CINDEX: functions, tcp/ip protocol
:END:
     To accomplish these tasks, the creators of TCP/IP settled on a /modular
     design/.  The TCP/IP protocol system is divided into separate components
     that theoretically function independently from one another.  Each
     /component/ is responsible for a piece of the communication process.

     The advantage of this modular design is that it lets vendors easily adapt
     the protocol software to specific hardway and operating systems.

***** TCP/IP Model
:CI:
#+CINDEX: layered components
#+CINDEX: stack, tcp/ip protocol
#+CINDEX: protocol layers, tcp/ip
#+CINDEX: functions, protocol layers
:END:
      The TCP/IP protocol system is subdivided into /layered components/, each
      of which performs specific duties.  This model, or *stack*, comes from the
      early days of TCP/IP, andis sometimes called the /TCP/IP model/.  The
      official *TCP/IP protocol layers* and their functions are described in the
      following list.  Compare the functions in the list with the
      responsibilities listed earlier; the responsibilities of the protocol
      system are distributed among the layers.

      See [[*Other Networking Models][By The Way---Many Models]]

***** The TCP/IP Model's Protocol Layers
:CI:
#+CINDEX: protocol layers, tcp/ip model
#+CINDEX: network access layer
#+CINDEX: internet layer
#+CINDEX: transport layer
#+CINDEX: application layer
:END:

      |------------------------------|
      | TCP/IP Model Protocol Layers |
      |------------------------------|
      | Application Layer            |
      |------------------------------|
      | Transport Layer              |
      |------------------------------|
      | Internet Layer               |
      |------------------------------|
      | Network Access Layer         |
      |------------------------------|

      + Network Access Layer ::

 	   Provides an interface with the physical network.  Formats the data for
           the transmission medium and addresses data for the subnet based on
           physical hardware addresses.  Provides error control for data
           delivered on the physical network.

      + Internet Layer ::

      Provides logical, hardware-independent addressing so that data can pass
      among subnets with different physical architectures.  Provides routing to
      reduce traffic and support delivery across the internetwork. Relates
      physical addresses (used at the Network Access layer) to logical
      addresses.

      + Transport Layer ::

           Provides flow-control, error-control, and acknowledgment services for
           the internetwork.  Serves as an interface for network applications.

      + Application Layer ::

           Provides applications for network troubleshooting, file transfer,
           remote control, and internet activities.  Also supports the network
           application programming interfaces (APIs) that enable programs
           written for a particular operating environment to access the
           network.

***** Added Information
:CI:
#+CINDEX: encapsulation
:END:
      When the TCP/IP protocol software prepares a piece of data for
      transmission across the network, each layer on the sending machine adds a
      layer of information tot he data that is relevant to the corresponding
      layer on the receiving machine.  This process is sometimes referred to as
      @@texinfo:@dfn{encapsulation}@@.

      See [[*Layers][By The Way---Layers]]

*** TCP/IP and the OSI Model
:CI:
#+CINDEX: Open Systems Interconnection
#+CINDEX: OSI model
:END:
    The networking industry has a standard *seven-layer model* for network
    protocol architecture called the @@texinfo:@dfn{Open Systems
    Interconnection (OSI) model}@@.  The OSI model represents an effort by the
    International Organization for Standardization (ISO) to standardize the
    design of network protocol systems to promote interconnectivity and open
    access to protocol standards for software developers.

    Strictly speaking, TCP/IP does not conform to the OSI model.  The OSI model
    has been very influential in the growth and development of protocol
    implementations, and it is quite common to see the OSI terminology applied
    to TCP/IP.

**** Relationship Between TCP/IP and OSI
     The OSI model divides the duties of the Application Layer into three
     layers: Application, Presentation, and Session.  OSI splits the activities
     of the Network Access layer into a Data Link layer and a Physical layer.
     This increased subdivision adds some complexity, but it also adds
     flexibility for developers by targeting the protocol layers to more
     specific services.  In particular, the division at the lower level into
     Data Link and Physical layers separates the functions related to
     organizing communication from the functions related to accessing the
     communication medium.  The three uper OSI layers offer a greater variety
     of alternatives for an application to interface with the protocol stack.

     #+CAPTION: The Seven-Layer OSI Model
     #+NAME: Tab:OSI-Model
     |----------------------+--------------------|
     | TCP/IP               | OSI                |
     |----------------------+--------------------|
     |                      | Application Layer  |
     | Application Layer    | Presentation Layer |
     |                      | Session Layer      |
     |----------------------+--------------------|
     | Transport Layer      | Transport Layer    |
     |----------------------+--------------------|
     | Internet Layer       | Network Layer      |
     |----------------------+--------------------|
     | Network Access Layer | Data Link Layer    |
     |                      | Physical Layer     |
     |----------------------+--------------------|

     + Physical Layer ::

        Converts the data into the stream of electrical or analog pulses that
                         will actually cross the transmission medium and
                         oversees the transmission of the data.

     + Data Link Layer ::

          Provides an interface with the network adaptor; maintains logical links
          for the subnet.

     + Network Layer ::

       Supports logical addressing and routing.

     + Transport Layer ::

        Provides error control and flow control for the internetwork.

     + Session Layer ::

          Establishes sessions between communicating applications on the
                        communicating computers.

     + Presentation Layer ::

          Translates data to a standard format; manages encryption and data
          compression.

     + Application Layer ::

          Provides a network interface for applications; supports network
          applications for file transfer, communcations, and so forth.


     The TCP/IP model and the OSI model are *standards*, not
     *implementations*.  Real-world implementations of TCP/IP do not always map
     cleanly to the models shown, and the perfect correspondence is also a
     matter of some discussion.

*** Data Packages

*** TCP/IP Networking

* Part II   --- TCP/IP Protocol System

** The Network Access Layer

*** Objectives
    + Physical addresses
    + Network architectures
    + Ethernet frames

    At the base of the TCP/IP protocol stack is the *Network Access layer*, the collection of
    services and specifications that provide and manage access to the network hardware.  This
    section teaches about the duties of the Network Access layer and how the Network Access layer
    relates to the OSI model.  This section also looks at the network technology known as
    *ethernet*.

    - Explain the Network Access layer
    - Discuss how TCP/IP's Network Access layer relates to the OSI networking model
    - Describe the purpose of a network architecture
    - List the contents of an ethernet frame

*** Protocols and Hardware

*** Network Access Layer and the OSI Model

*** Network Architecture

*** Physical Addressing

*** Ethernet

*** Ethernet Frame
** The Internet Layer

*** Objective
    + IP addresses
    + The IP header
    + ARP
    + ICMP

    Computers on a single network segment such as abn ethernet local area netork (LAN) can
    communicate with each other using the physical addresses available at the Network Access
    layer.  How does an email message get from Carolina to California and arrive precisely at its
    destination?  The protocols at the *Internet layer* provide for delivery beyond the local
    network segment.  This section discusses the important *Internet layer* protocols /IP/, /ARP/,
    and /ICMP/.

    The focus of this section is on the 32-bit binary IPv4 addresses used throughout the Internet.
    The world is currently in transition to a new 128-bit address system known as IPv6, which
    offers enhanced capabilities and a much larger address space.  See Chapter 13, ``IPv6: The Next
    Generation,'' for more on IPv6.

    - Explain the purpose of IP, ARP, and ICMP
    - Explain what a network ID and host ID are
    - Explain what an octet is
    - Convert a dotted-decimal address to its binary equivalent
    - Convert a 32-bit binary address into a dotted-decimal notation
    - Describe the contents of an IP header
    - Explain the purpose of the IP address

*** IP Addresses
*** Addressing and Delivery

*** Internet Protocol

*** Address Resolution Protocol

*** Reverse ARP

*** Internet Control Message Protocol

** Subnetting and CIDR

*** Objectives
    + Subnetting
    + Subnet masks
    + CIDR notation

    Subnetting evolved as a means for using IP addresses to break up a physical network into
    smaller logical entities called *subnets*.  Later developments, such as *Classess Inter-Domain
    Routing (CIDR)* and IPv6 have reduced the need for the classical approach to subnetting, but
    these later techniques borrow from the basic subnetting principles, and no discussion of TCP/IP
    is complete without a description of subnetting.  This section addresses the needs and benefits
    of subnetting on IPv4 networks and describes the steps and procedures you should follow to
    generate a subnet mask.

    - Explain how subnets are used
    - Explain the benefits of subnetting
    - Develop a subnet mask that meets business needs
    - Describe supernetting and CIDR notation

*** Subnets
*** Dividing the Network

*** Subnet Mask

*** CIDR

** The Transport Layer

*** Objectives
    + Connection-oriented and connectionless protocols
    + Ports and sockets
    + TCP
    + UDP

    The *Transport layer*  provides an interface for network applications and offers optional error
    checking, flow control, and verification for network transmissions.  This hour describes some
    important Transport layer concepts and introduces the TCP/IP and UDP protocols.

    - Describe the basic duties of the Transport layer
    - Explain the difference between a connection-oriented protocol and a connectionless protocol
    - Explain how Transport layer protocols provide an interface to network applications through
      ports and sockets
    - Describe the differences between TCP and UDP
    - Identify the fields that make up the TCP header
    - Describe how TCP opens and closes a connection
    - Describe how TCP sequences and acknowledges data transmissions
    - Identify the four fields that comprise the UDP header

*** The Transport Layer

*** Transport Layer Concepts

*** Understanding TCP and UDP

*** Firewals and Ports

** The Application Layer

*** Objectives
    + Network services
    + APIs
    + TCP/IP utilities

    At the top of the TCP/IP stack is the *Application layer*, a loose collection of networking
    components perched above the Transport layer.  This section describes some of the kinds of
    Application layer components and shows how those components help bring the user to the
    network.  Specifically this section examines Application layer services, operating
    environments, and network applications.

    - Describe the Application layer
    - Describe some of the Application layer's network services
    - List some of TCP/IP's important utilities

*** The Application Layer

*** The TCP/IP Application Layer and OSI

*** Network Services

*** APIs and the Application Layer

*** TCP/IP Utilities

* Part III  --- Networking with TCP/IP

** Routing

*** Objectives
    + IP forwarding
    + Direct and indirect routing
    + Routing protocols

    The infrastructure that supports global networks such as the Internet could not function
    without routers.  TCP/IP was designed to operate with routers, and no discussion of TCP/IP is
    complete without a discussion of what the routers are doing.  A router participates in a
    complex process of communication with other routers on the network to determine the best path
    to each destination.  In this section you learn about routers, routing tables, and routing
    protocols.

    - Describe IP forwarding and how it works
    - Distinguish between distance-vector routing and link-state routing
    - Discuss the roles of core, interior, and exterior routers
    - Describe the common interior routing protocols RIP and OSPF

*** Routing in TCP/IP

*** Routing in Complex Networks

*** Examining Interior Networks

*** Exterior Routers --- BGP

*** Classless Routing

*** Higher in the Stack

** Getting Connected

*** Objectives
    + Broadband technologies like cable and DSL
    + Wide area networks
    + Wireless networking
    + Dial-up networking
    + Connectivity devices

    The Network Access layer manages the interface with the physical network.  But what exactly is
    the physical network?  After all the conceptual sketches of bits, bytes, ports, and protocol
    layers, sooner or later an Internet connection requires some form of device connecting a
    computer or local network segment to the larger network beyond.  This section examines some of
    the devices and processes supporting access to the TCP/IP networks.

    - Understand the basics of cable broadband
    - Discuss defining features of DSL
    - Describe the topologies of wireless networks and the elements and the function of wireless
      security schemes such as WEP and WPA2
    - Describe how computers communicate over phone lines with dial-up networking

    This section introduces some of the other connectivity devices (beyond routers) commonly found
    on TCP/IP networks, such as /switches/, /hubs/, and /bridges/.  These hardware-based
    technologies inhabit the lowest level of the TCP/IP protocol stack (Layers 1 and 2 of the Open
    Systems Interconnction [OSI] stack) and are largely invisible to protocols and applications
    operating at higher levels.  A web browser is still a web browser, regardless of whether the
    computer running the browser application is connected to a switch, cable modem, digital
    subscriber line (DSL), or wireless access point.

*** Cable Broadband

*** Digital Subscriber Line

*** Wide Area Networks

*** Wireless Networking

*** Dial-Up Networking

*** Connectivity Devices

*** Switching Versus Routing

** Name Resolution

*** Objectives
    + Hostname resolution
    + DNS
    + DNSSEC
    + Dynamic DNS
    + NetBIOS

    The name resolution process accepts a name for a computer and attempts to resolve the name to
    the corresponding address.  In this section you learn about *hostnames*, *domain names*, and
    *fully qualified domain names (FQDNs)*.  This section also introduces the alternative *NetBIOS
    name resolution system* used on some lagacy Microsoft networks.

    - Explain how name resolution works
    - Explain the differences between hostnames, domain names, and FQDNs
    - Describe hostname resolution
    - Describe DNS name resolution
    - Describe the NetBIOS name resolution

*** Name Resolution

*** Name Resolution Using Hosts Files

*** DNS Name Resolution

*** Registering a Domain

*** Name Server Types

*** Dynamic DNS

*** NetBIOS Name Resolution

** TCP/IP Security

*** Objectives
    + Firewalls and proxy service
    + Network intrusion techniques
    + Network security best practices

    This section introduces some tools and techniques for protecting TCP/IP networks, and explores
    some techniques the intruders use to slip past Internet defenses.  The first section begins
    with a look at one of the most important components of any security system, the *network
    firewall*.

    - Explain how a firewall works
    - Describe a proxy server and reverse proxy server
    - Discuss some of the most common network attack techniques and what to do about them

*** What is a Firewall

*** Attack Techniques

*** What Do Intruders Want?

** Configuration

*** Objectives
    + Dynamic address assignment
    + DHCP
    + NAT
    + Zeroconf

    In the old days every client computer held a static IP address defined somewhere within a
    configuration file, and to change the configurationb, the system administerator had to go
    change the file.  Networks today, however, require a more versatile and convenient approach,
    and most computers operate through some form of dynamic or automatic configuration.  This
    section looks at some common techniques for configuring TCP/IP networking.

    - Describe DHCP and the benefits it provides
    - Describe the process of leasing an IP address through DHCP
    - Describe the purpose of Network Address Translation
    - Show how computers use the zero-configuration protocols

*** Getting on the Network

*** The Case for Server-Supplied IP Addresses

*** What is DHCP?

*** How DHCP Works

*** DHCP Server Configuration

*** Network Address Translation

*** Zero Configuration

*** Configuring TCP/IP

** IPv6

*** Objectives
    + The reasons for IPv6
    + IPv6 header format
    + IPv6 addressing
    + Subnetting
    + Multicasting
    + Neighbor discovery
    + IPv6 tunnels

    Because the Internet keeps changing, the protocols that govern Intern communication must also
    keep changing.  The Internet Protocol (IP), which defines the all-important IP address system,
    has been poised for an upgrade for years.  This section looks at what's ahead for the next
    generation of IP.

    - Discuss the reasons why a new IP address system is necessary
    - Describe the fields of the IPv6 header
    - Apply the conventions for writing and simplifying IPv6 address
    - Map existing IPv4 addresses to the IPv6 address space
    - Understant IPv6 multicasting and neighbor discovery
    - Describe soem popular IPv6 tunnel options

*** Why a New IP?

*** IPv6 Header Format

*** IPv6 Addressing

*** Subnetting

*** Multicasting

*** Link Local

*** Neighbor Discovery

*** Autoconfiguration

*** IPv6 and Quality of Service

*** IPv6 with IPv4

*** IPv6 Tunnels

* Part IV   --- Tools and Services

** Classic Tools

*** Objectives
    + Protocol problems
    + Line problems
    + Name resolution problems
    + Network performance problems
    + Telnet
    + SSH
    + SNMP
    + RMON

    The TCP/IP environment includes a number of standard utilities for configuring, managing, and
    trouble-shootinbg network connections.  Other classic tools manage tasks such as remote access
    and monitoring.  These TCP/IP utilities date back to the days before the birth of the modern
    graphical user interface, and many of them are designed to operate from the command line.  This
    section looks at some utilities you can use to troubleshoot, configure, monitor, and manage
    TCP/IP.  Other management and troubleshooting tools exist---many of them expensive proprietary
    applications with sophisticated graphic interfaces and other advanced features---but the
    emphasis of this section is on classic free tools that evolved around TCP/IP and form a sort of
    universal toolkit for dealing with networking problems.

    - Identify and describe common TCP/IP connectivity utilities
    - Use connectivity utilities to troubleshoot problems
    - Explain the purpose of SSH and Telnet
    - Describe some common network management protocols

*** Connectivity Problems

*** Protocol Dysfunction and Misconfiguration

*** Line Problems

*** Name Resolution Problems

*** Network Performance Problems

*** Telnet

*** Berkely Remote Utilities

*** Secure Shell

*** Network Management

** Classic Services

*** Objectives
    + FTP
    + TFTP
    + NFS
    + SMB and CIFS
    + LDAP
    + Remote Control

    If you are willing to write a server application, write a client application, and string some
    network cable, you can create tools for a vast range of purposes.  Most people, however, prefer
    to rely on tools that are already written.  At an earlier and more experimental age, a wider
    range of more primitive services played an important role on the Internet.  The first edition
    of this book even included descriptions of some of these services, such as /Archie/,
    /Veronica/, and /Gopher/, all of which have disappeared and been replaced by the
    super-versatile /Hypertext Transfer Protocol (HTTP) service/ at the heart of what we know as
    the World Wide Web.  This hour rounds up some of the most important standard services that are
    at work right now on TCP/IP networks.  In terms of the protocol system, these services all
    operate at the Application layer and listen for requests through the Transport layer ports.
    These tools make up a vast portion of Internet activity, and they command a large share of
    attention from IT professionals.

    - HTTP
    - Email
    - FTP file transfer
    - File and print services
    - LDAP
    - IRC and IM messaging

    Many of the tools that appear as separate activities on the Web, such as social networking and
    streaming, are often extensions of the web infrastructure supported by HTTP.  Later sections
    look at HTTP and email.  This section focuses on services available to users who are already
    connected and making choices about their network activities.  Equally important are background
    services the user doesn't see, such as domain name system (DNS) and DHCP.

*** HTTP

*** Email

*** FTP

*** Trivial File Transfer Protocol

*** File and Print Services

*** Lightweight Directory Access Protocol

*** Remote Control

* Part V    --- The Internet

** Part V --- The Internet

*** Objectives
    + Internet topology
    + IXPs and POPs
    + URIs and URLs

    The ever-expanding Internet is the world's biggest example of a TCP/IP network.  This section
    provides a brief overview of the Internet's structure.  This discussion of the Internet
    continues over the next two sections, which cover the World Wide Web as well as HTML 5 and web
    services.

    - Briefly describe the structure of the Internet
    - Recognize and describe the components of a uniform resource identifier

*** How the Internet Looks

*** What Happens on the Internet

*** URIs and URLs

** HTTP HTML WWW

*** Objectives
    + HTML
    + HTTP
    + Web browsers
    + The semantic web
    + XHTML
    + HTML5

    The World Wide Web began as a universal graphic display framework for the Internet.  Since its
    inception, the Web has come to dominate public percpetions of the Internet, and it has
    revolutionized the way we think about application interfaces.  This section provides an
    introduction to HTTP, HTML, and the Web.

    - Show how the World Wide Web works
    - Build a basic web page using text and HTML tags
    - Discuss the HTTP protocol and describe how it works
    - Explain the purpose of the semantic web

*** What is the WWW?

*** Understanding HTML

*** Cascading Style Sheets

*** Understanding HTTP

*** Scripting

*** Web Browsers

*** The Semantic Web

*** XHTML

*** HTML5

** Web Services

*** Objectives
    + Content management systems
    + Peer-to-peer networking
    + Web services
    + XML
    + SOAP
    + WSDL
    + REST
    + Web transactions

    The technologies of the Web have led to a revolution in software development.  The simple Web
    server, which is actually an HTTP server, forms the foundation for a wonderland of applications
    and services made available through the elegant web browser interface.  This section describes
    some of the web applications you interact with every day, such as *content management systems*,
    *wikis*, and *blogs*.  You'll also learn about the powerful Web service architecture, which
    lets the programmer leverage the tools of the Web for complex tasks never envisioned by the
    creators of Hyptertext Markup Language (HTML), and you'll get a quick look at how e-commerce
    websites process web transactions.

    - Discuss blogs, wikis, and social networking sites
    - Understand how a peer-to-peer network works
    - Discuss the web service architecture
    - Understand the role of XML, SOAP, WSDL, and REST in the service paradigm
    - Describe how e-commerce websites process monetary transactions

*** Content Management Systems

*** Socal Networking

*** Peer-to-Peer

*** Understanding Web Services

*** XML

*** SOAP

*** WSDL

*** Web Service Stacks

*** REST

*** E-Commerce

** Encryption, Tracking, and Privacy

*** Objectives
    + Encryption
    + Digital signatures
    + VPNs
    + Kerberos
    + Web tracking
    + Cookies
    + Anonymity Networks

    The Internet is a wide open place, where attackers, eavesdroppers, advertisers, and spies have
    manyi reasons to watch what you do.  Keeping intruders off your network is only part of the
    security challenge.  This section describes how encryption works with the Internet protocols to
    protect your data in transit and verify your identify to remote users.  On today's Internet,
    even ordinary web surfing can lead to some significant data collection.  This section presents
    web tracking, browser cookies, and anonymity networks.

    - Explain the difference between symnmetric and asymmetric encryption
    - Describe digital certificates
    - Discuss the IPsec and TLS security protocols
    - Describe some common methods for tracking on the web
    - Explain what an anonymity network is and how it works

*** Encryption and Secrecy

*** Tracking

*** Anonymity Networks

* Part VI   --- TCP/IP At Work

** Email

*** Objectives
   + Email
   + SMTP
   + Spam

   This section introduces some important email concepts and shows how electronic mail services
   operate on a TCP/IP network.

   - Describe the parts of an email message
   - Discuss the email delivery process
   - Describe how SMTP transmission works
   - Discuss the mail retrieval protocols POP3 and IMAP4
   - Describe the role of an email application

*** What is Email?

*** Email Formats

*** How Email Works

*** Simple Mail Transfer Protocol

*** Retrieving the Mail

*** Email Clients

*** Webmail

*** Spam

*** Phishing

** Streaming and Casting

*** Objectives
    + Streaming protocols
    + Multimedia links
    + Podcasting
    + Voice over IP

    New ideas and new protocols were necessary to usher in the era of Internet streaming.  This
    section looks at multimedia technologies for the Internet.

    - Describe the UDP-based RTP and its helper protocols
    - Describe the RTMP and streaming over TCP
    - Discuss the Transport layer alternatives SCTP and DCCP
    - Describe Adaptive Bitrate streaming over HTTP
    - Describe the new multimedia features of HTML5, including Media Source Extensions and the
      ~<video>~ element
    - Explain what podcasting is and how it works
    - Describe some important VoIP protocols

*** The Streaming Problem

*** Multimedia Files

*** Real-Time Transportg Protocol --- Streaming Over UDP

*** RTMP --- Streaming over TCP

*** SCTP and DCCP --- Replacing the Transport Layer

*** Streaming over HTTP

*** HTML5 and Multimedia

*** Podcasting

*** Voice Over IP

** The Cloud

*** Objectives
    + Software as a Service
    + Infrastructure as a Service
    + Platform as a Service
    + Virtual hosting
    + The elastic cloud

    Everyone is talking about /the cloud/, but the term *cloud computing* can have different
    meanings depending on the context.  This section studies the cloud from the viewpoints of the
    end user and IT specialist.

    - Explain why Software as a Service tools are gaining popularity in the mobile era
    - Define SaaS, IaaS, and PaaS cloud services
    - Describe how data centers use virtualization
    - Describe elastic hosting
    - Explain how Platform as a Service differs from EC2-style elastic cloud services

*** What Is the Cloud?

*** Private Clouds

*** Future of Computing

** IoT

*** Objectives
    + What is the Internet of Things
    + IoT alternatives
    + MQTT
    + RFID

    As TCP/IP networking gets bigger, it gets smaller.  Networking began as a tool for big
    computers to talk to each other, and it grew into a tool for small computers to talk to each
    other.  At some point, computers started talking to really really small computers, like tablets
    and handheld devices.  In the dreamy market-speak of the high-tech industry, the network of the
    future will talk to /everything/, but perhaps a better description would be /lots and lots of
    things/.  This hour describes the Internet of Things, a collection of emerging technologies
    designed to let the network interact with electrical objects throughout the build environmenht.

    - Define the Internet of Things (IoT)
    - Explain the differen between closed and open IoT systems
    - Describe how the MQTT protocol supports IoT implmentations
    - Discuss the Radio Frequency Identification (RFID)

*** What is the Internet of Things

*** IoT Platforms

*** Up Close --- MQTT

*** RFID

** Implementing a TCP/IP Network

*** Objectives
    + TCP/IP in action
    + Life as a network admin

    The preceding sections introduced many of the important components that make up a TCP/IP
    network.  In this section, you witness many of these components in a real, although
    hypothetical situation.  At the completion of this hour, you'll be able to describe how the
    components of a TCP/IP network interact.

* By The Ways
  :PROPERTIES:
  :APPENDIX: t
  :END:

** Other Networking Models
   The four-layered model is a common model for describing TCP/IP networking,
   but it is not the only model.
   + ARPAnet model :: is described in RFC 871; it describes three layers:
     1. Network Interface layer
     2. Host-to-Host layer
     3. Process-Level/Applications layer
   + Five-layer model :: has these layers
     1. Physical layer
     2. Data Link layer
     3. Internet layer
     4. Transport layer
     5. Application layer
   + Other models :: might exclude either the Network Access or the
                     Application layer





** Layers
:CI:
#+CINDEX: layer
:END:
   The term @@texinfo:@dfn{layer}@@ is used throughout the computer industry
   for protocol component levels.  Header information is applied in layers to
   the data as it passes through the components of the protocol stack.  When it
   comes to the components themselves, however, the term /layer/ is somewhat
   metaphorical.

* Answers to Quizzes and Exercises
  :PROPERTIES:
  :APPENDIX: t
  :END:

** What Is TCP/IP

** How TCP/IP Works

** The Network Access Layer

** The Internet Layer

** Subnetting and CIDR

** The Transport Layer

** The Application Layer

** Routing

** Getting Connected

** Name Resolution

** TCP/IP Security

** Configuration

** IPv6 The Next Generation

** Classic Tools

** Classic Services

** The Internet

** HTTP, HTML, and the World Wide Web

** Web Services

** Encryption, Tracking, and Privacy

** Email

** Streaming and Casting

** Living in the Cloud

** Internet of Things

** Implmenting a TCP/IP Network

* Sources
  :PROPERTIES:
  :APPENDIX: t
  :END:

* List of Tables
  :PROPERTIES:
  :APPENDIX: t
  :END:
@@texinfo:@listoffloats Table@@


* Index
  :PROPERTIES:
  :INDEX: cp
  :END:

* Macros                                                           :noexport:
  #+macro: heading @@texinfo:@heading $1@@
  #+macro: subheading @@texinfo:@subheading $1@@

* Settings                                                         :noexport:
#+TEXINFO_FILENAME:tcp-ip.info
#+TEXINFO_CLASS: info
#+TEXINFO_HEADER:
#+TEXINFO_POST_HEADER:
#+TEXINFO_DIR_CATEGORY: Networking
#+TEXINFO_DIR_TITLE:TCP/IP
#+TEXINFO_DIR_DESC:All About TCP/IP
#+TEXINFO_PRINTED_TITLE:All About TCP/IP
#+OPTIONS: H:4
